
Timer1_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000039c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000039c  00000410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000410  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00000b68  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000656  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000023a  00000000  00000000  0000127e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041d  00000000  00000000  000014b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  000018d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000224  00000000  00000000  00001994  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000320  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a5 01 	call	0x34a	; 0x34a <main>
  8a:	0c 94 cc 01 	jmp	0x398	; 0x398 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_void_Set_pin_dir>:
#include "DIO_Interface.h"


void DIO_void_Set_pin_dir(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_dir)
{
	if(copy_u8_pin <= 7 && copy_u8_pin >= 0)
  92:	68 30       	cpi	r22, 0x08	; 8
  94:	08 f0       	brcs	.+2      	; 0x98 <DIO_void_Set_pin_dir+0x6>
  96:	81 c0       	rjmp	.+258    	; 0x19a <DIO_void_Set_pin_dir+0x108>
	{
		if(copy_u8_dir == OUTPUT)
  98:	41 30       	cpi	r20, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_void_Set_pin_dir+0xc>
  9c:	3e c0       	rjmp	.+124    	; 0x11a <DIO_void_Set_pin_dir+0x88>
		{
			switch (copy_u8_port)
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	a9 f0       	breq	.+42     	; 0xcc <DIO_void_Set_pin_dir+0x3a>
  a2:	81 30       	cpi	r24, 0x01	; 1
  a4:	30 f0       	brcs	.+12     	; 0xb2 <DIO_void_Set_pin_dir+0x20>
  a6:	82 30       	cpi	r24, 0x02	; 2
  a8:	f1 f0       	breq	.+60     	; 0xe6 <DIO_void_Set_pin_dir+0x54>
  aa:	83 30       	cpi	r24, 0x03	; 3
  ac:	09 f0       	breq	.+2      	; 0xb0 <DIO_void_Set_pin_dir+0x1e>
  ae:	75 c0       	rjmp	.+234    	; 0x19a <DIO_void_Set_pin_dir+0x108>
  b0:	27 c0       	rjmp	.+78     	; 0x100 <DIO_void_Set_pin_dir+0x6e>
			{
				case PORTA : SET_BIT(DDRA_REG, copy_u8_pin); break;
  b2:	2a b3       	in	r18, 0x1a	; 26
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	ac 01       	movw	r20, r24
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_void_Set_pin_dir+0x2e>
  bc:	44 0f       	add	r20, r20
  be:	55 1f       	adc	r21, r21
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_void_Set_pin_dir+0x2a>
  c4:	ba 01       	movw	r22, r20
  c6:	62 2b       	or	r22, r18
  c8:	6a bb       	out	0x1a, r22	; 26
  ca:	08 95       	ret
				case PORTB : SET_BIT(DDRB_REG, copy_u8_pin); break;
  cc:	27 b3       	in	r18, 0x17	; 23
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	ac 01       	movw	r20, r24
  d4:	02 c0       	rjmp	.+4      	; 0xda <DIO_void_Set_pin_dir+0x48>
  d6:	44 0f       	add	r20, r20
  d8:	55 1f       	adc	r21, r21
  da:	6a 95       	dec	r22
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <DIO_void_Set_pin_dir+0x44>
  de:	ba 01       	movw	r22, r20
  e0:	62 2b       	or	r22, r18
  e2:	67 bb       	out	0x17, r22	; 23
  e4:	08 95       	ret
				case PORTC : SET_BIT(DDRC_REG, copy_u8_pin); break;
  e6:	24 b3       	in	r18, 0x14	; 20
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	ac 01       	movw	r20, r24
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_void_Set_pin_dir+0x62>
  f0:	44 0f       	add	r20, r20
  f2:	55 1f       	adc	r21, r21
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_void_Set_pin_dir+0x5e>
  f8:	ba 01       	movw	r22, r20
  fa:	62 2b       	or	r22, r18
  fc:	64 bb       	out	0x14, r22	; 20
  fe:	08 95       	ret
				case PORTD : SET_BIT(DDRD_REG, copy_u8_pin); break;
 100:	21 b3       	in	r18, 0x11	; 17
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	ac 01       	movw	r20, r24
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_void_Set_pin_dir+0x7c>
 10a:	44 0f       	add	r20, r20
 10c:	55 1f       	adc	r21, r21
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_void_Set_pin_dir+0x78>
 112:	ba 01       	movw	r22, r20
 114:	62 2b       	or	r22, r18
 116:	61 bb       	out	0x11, r22	; 17
 118:	08 95       	ret
			}
		}
		else
		{
			switch (copy_u8_port)
 11a:	81 30       	cpi	r24, 0x01	; 1
 11c:	a9 f0       	breq	.+42     	; 0x148 <DIO_void_Set_pin_dir+0xb6>
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	28 f0       	brcs	.+10     	; 0x12c <DIO_void_Set_pin_dir+0x9a>
 122:	82 30       	cpi	r24, 0x02	; 2
 124:	f9 f0       	breq	.+62     	; 0x164 <DIO_void_Set_pin_dir+0xd2>
 126:	83 30       	cpi	r24, 0x03	; 3
 128:	c1 f5       	brne	.+112    	; 0x19a <DIO_void_Set_pin_dir+0x108>
 12a:	2a c0       	rjmp	.+84     	; 0x180 <DIO_void_Set_pin_dir+0xee>
			{
				case PORTA : CLR_BIT(DDRA_REG, copy_u8_pin); break;
 12c:	2a b3       	in	r18, 0x1a	; 26
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	ac 01       	movw	r20, r24
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_void_Set_pin_dir+0xa8>
 136:	44 0f       	add	r20, r20
 138:	55 1f       	adc	r21, r21
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_void_Set_pin_dir+0xa4>
 13e:	ba 01       	movw	r22, r20
 140:	60 95       	com	r22
 142:	62 23       	and	r22, r18
 144:	6a bb       	out	0x1a, r22	; 26
 146:	08 95       	ret
				case PORTB : CLR_BIT(DDRB_REG, copy_u8_pin); break;
 148:	27 b3       	in	r18, 0x17	; 23
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	ac 01       	movw	r20, r24
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_void_Set_pin_dir+0xc4>
 152:	44 0f       	add	r20, r20
 154:	55 1f       	adc	r21, r21
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_void_Set_pin_dir+0xc0>
 15a:	ba 01       	movw	r22, r20
 15c:	60 95       	com	r22
 15e:	62 23       	and	r22, r18
 160:	67 bb       	out	0x17, r22	; 23
 162:	08 95       	ret
				case PORTC : CLR_BIT(DDRC_REG, copy_u8_pin); break;
 164:	24 b3       	in	r18, 0x14	; 20
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	ac 01       	movw	r20, r24
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_void_Set_pin_dir+0xe0>
 16e:	44 0f       	add	r20, r20
 170:	55 1f       	adc	r21, r21
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_void_Set_pin_dir+0xdc>
 176:	ba 01       	movw	r22, r20
 178:	60 95       	com	r22
 17a:	62 23       	and	r22, r18
 17c:	64 bb       	out	0x14, r22	; 20
 17e:	08 95       	ret
				case PORTD : CLR_BIT(DDRD_REG, copy_u8_pin); break;
 180:	21 b3       	in	r18, 0x11	; 17
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	ac 01       	movw	r20, r24
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_void_Set_pin_dir+0xfc>
 18a:	44 0f       	add	r20, r20
 18c:	55 1f       	adc	r21, r21
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_void_Set_pin_dir+0xf8>
 192:	ba 01       	movw	r22, r20
 194:	60 95       	com	r22
 196:	62 23       	and	r22, r18
 198:	61 bb       	out	0x11, r22	; 17
 19a:	08 95       	ret

0000019c <DIO_void_Set_pin_val>:
}

void DIO_void_Set_pin_val(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_val)
{
		
		if(copy_u8_val == HIGH)
 19c:	41 30       	cpi	r20, 0x01	; 1
 19e:	09 f0       	breq	.+2      	; 0x1a2 <DIO_void_Set_pin_val+0x6>
 1a0:	3e c0       	rjmp	.+124    	; 0x21e <DIO_void_Set_pin_val+0x82>
		{
			switch (copy_u8_port)
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	a9 f0       	breq	.+42     	; 0x1d0 <DIO_void_Set_pin_val+0x34>
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	30 f0       	brcs	.+12     	; 0x1b6 <DIO_void_Set_pin_val+0x1a>
 1aa:	82 30       	cpi	r24, 0x02	; 2
 1ac:	f1 f0       	breq	.+60     	; 0x1ea <DIO_void_Set_pin_val+0x4e>
 1ae:	83 30       	cpi	r24, 0x03	; 3
 1b0:	09 f0       	breq	.+2      	; 0x1b4 <DIO_void_Set_pin_val+0x18>
 1b2:	75 c0       	rjmp	.+234    	; 0x29e <DIO_void_Set_pin_val+0x102>
 1b4:	27 c0       	rjmp	.+78     	; 0x204 <DIO_void_Set_pin_val+0x68>
			{
				case PORTA : SET_BIT(PORTA_REG, copy_u8_pin); break;
 1b6:	2b b3       	in	r18, 0x1b	; 27
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	ac 01       	movw	r20, r24
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_void_Set_pin_val+0x28>
 1c0:	44 0f       	add	r20, r20
 1c2:	55 1f       	adc	r21, r21
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_void_Set_pin_val+0x24>
 1c8:	ba 01       	movw	r22, r20
 1ca:	62 2b       	or	r22, r18
 1cc:	6b bb       	out	0x1b, r22	; 27
 1ce:	08 95       	ret
				case PORTB : SET_BIT(PORTB_REG, copy_u8_pin); break;
 1d0:	28 b3       	in	r18, 0x18	; 24
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	ac 01       	movw	r20, r24
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_void_Set_pin_val+0x42>
 1da:	44 0f       	add	r20, r20
 1dc:	55 1f       	adc	r21, r21
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_void_Set_pin_val+0x3e>
 1e2:	ba 01       	movw	r22, r20
 1e4:	62 2b       	or	r22, r18
 1e6:	68 bb       	out	0x18, r22	; 24
 1e8:	08 95       	ret
				case PORTC : SET_BIT(PORTC_REG, copy_u8_pin); break;
 1ea:	25 b3       	in	r18, 0x15	; 21
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	ac 01       	movw	r20, r24
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_void_Set_pin_val+0x5c>
 1f4:	44 0f       	add	r20, r20
 1f6:	55 1f       	adc	r21, r21
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_void_Set_pin_val+0x58>
 1fc:	ba 01       	movw	r22, r20
 1fe:	62 2b       	or	r22, r18
 200:	65 bb       	out	0x15, r22	; 21
 202:	08 95       	ret
				case PORTD : SET_BIT(PORTD_REG, copy_u8_pin); break;
 204:	22 b3       	in	r18, 0x12	; 18
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	ac 01       	movw	r20, r24
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_void_Set_pin_val+0x76>
 20e:	44 0f       	add	r20, r20
 210:	55 1f       	adc	r21, r21
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_void_Set_pin_val+0x72>
 216:	ba 01       	movw	r22, r20
 218:	62 2b       	or	r22, r18
 21a:	62 bb       	out	0x12, r22	; 18
 21c:	08 95       	ret
			}
		}
		else
		{
			switch (copy_u8_port)
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	a9 f0       	breq	.+42     	; 0x24c <DIO_void_Set_pin_val+0xb0>
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	28 f0       	brcs	.+10     	; 0x230 <DIO_void_Set_pin_val+0x94>
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	f9 f0       	breq	.+62     	; 0x268 <DIO_void_Set_pin_val+0xcc>
 22a:	83 30       	cpi	r24, 0x03	; 3
 22c:	c1 f5       	brne	.+112    	; 0x29e <DIO_void_Set_pin_val+0x102>
 22e:	2a c0       	rjmp	.+84     	; 0x284 <DIO_void_Set_pin_val+0xe8>
			{
				case PORTA : CLR_BIT(PORTA_REG, copy_u8_pin); break;
 230:	2b b3       	in	r18, 0x1b	; 27
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	ac 01       	movw	r20, r24
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_void_Set_pin_val+0xa2>
 23a:	44 0f       	add	r20, r20
 23c:	55 1f       	adc	r21, r21
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_void_Set_pin_val+0x9e>
 242:	ba 01       	movw	r22, r20
 244:	60 95       	com	r22
 246:	62 23       	and	r22, r18
 248:	6b bb       	out	0x1b, r22	; 27
 24a:	08 95       	ret
				case PORTB : CLR_BIT(PORTB_REG, copy_u8_pin); break;
 24c:	28 b3       	in	r18, 0x18	; 24
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	ac 01       	movw	r20, r24
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_void_Set_pin_val+0xbe>
 256:	44 0f       	add	r20, r20
 258:	55 1f       	adc	r21, r21
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_void_Set_pin_val+0xba>
 25e:	ba 01       	movw	r22, r20
 260:	60 95       	com	r22
 262:	62 23       	and	r22, r18
 264:	68 bb       	out	0x18, r22	; 24
 266:	08 95       	ret
				case PORTC : CLR_BIT(PORTC_REG, copy_u8_pin); break;
 268:	25 b3       	in	r18, 0x15	; 21
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	ac 01       	movw	r20, r24
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_void_Set_pin_val+0xda>
 272:	44 0f       	add	r20, r20
 274:	55 1f       	adc	r21, r21
 276:	6a 95       	dec	r22
 278:	e2 f7       	brpl	.-8      	; 0x272 <DIO_void_Set_pin_val+0xd6>
 27a:	ba 01       	movw	r22, r20
 27c:	60 95       	com	r22
 27e:	62 23       	and	r22, r18
 280:	65 bb       	out	0x15, r22	; 21
 282:	08 95       	ret
				case PORTD : CLR_BIT(PORTD_REG, copy_u8_pin); break;
 284:	22 b3       	in	r18, 0x12	; 18
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	ac 01       	movw	r20, r24
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_void_Set_pin_val+0xf6>
 28e:	44 0f       	add	r20, r20
 290:	55 1f       	adc	r21, r21
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_void_Set_pin_val+0xf2>
 296:	ba 01       	movw	r22, r20
 298:	60 95       	com	r22
 29a:	62 23       	and	r22, r18
 29c:	62 bb       	out	0x12, r22	; 18
 29e:	08 95       	ret

000002a0 <DIO_u8_Get_pin_val>:

u8 DIO_u8_Get_pin_val(u8 copy_u8_port, u8 copy_u8_pin)
{
	u8 Loc_u8_val = 0;
	
	switch(copy_u8_port)
 2a0:	81 30       	cpi	r24, 0x01	; 1
 2a2:	89 f0       	breq	.+34     	; 0x2c6 <DIO_u8_Get_pin_val+0x26>
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	28 f0       	brcs	.+10     	; 0x2b2 <DIO_u8_Get_pin_val+0x12>
 2a8:	82 30       	cpi	r24, 0x02	; 2
 2aa:	b9 f0       	breq	.+46     	; 0x2da <DIO_u8_Get_pin_val+0x3a>
 2ac:	83 30       	cpi	r24, 0x03	; 3
 2ae:	49 f5       	brne	.+82     	; 0x302 <DIO_u8_Get_pin_val+0x62>
 2b0:	1e c0       	rjmp	.+60     	; 0x2ee <DIO_u8_Get_pin_val+0x4e>
	{
		case PORTA : Loc_u8_val = GET_BIT(PINA_REG, copy_u8_pin); break;
 2b2:	29 b3       	in	r18, 0x19	; 25
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	c9 01       	movw	r24, r18
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_u8_Get_pin_val+0x1e>
 2ba:	95 95       	asr	r25
 2bc:	87 95       	ror	r24
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_u8_Get_pin_val+0x1a>
 2c2:	81 70       	andi	r24, 0x01	; 1
 2c4:	08 95       	ret
		case PORTB : Loc_u8_val = GET_BIT(PINB_REG, copy_u8_pin); break;
 2c6:	26 b3       	in	r18, 0x16	; 22
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	c9 01       	movw	r24, r18
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_u8_Get_pin_val+0x32>
 2ce:	95 95       	asr	r25
 2d0:	87 95       	ror	r24
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_u8_Get_pin_val+0x2e>
 2d6:	81 70       	andi	r24, 0x01	; 1
 2d8:	08 95       	ret
		case PORTC : Loc_u8_val = GET_BIT(PINC_REG, copy_u8_pin); break;
 2da:	23 b3       	in	r18, 0x13	; 19
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	c9 01       	movw	r24, r18
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_u8_Get_pin_val+0x46>
 2e2:	95 95       	asr	r25
 2e4:	87 95       	ror	r24
 2e6:	6a 95       	dec	r22
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_u8_Get_pin_val+0x42>
 2ea:	81 70       	andi	r24, 0x01	; 1
 2ec:	08 95       	ret
		case PORTD : Loc_u8_val = GET_BIT(PIND_REG, copy_u8_pin); break;
 2ee:	20 b3       	in	r18, 0x10	; 16
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	c9 01       	movw	r24, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_u8_Get_pin_val+0x5a>
 2f6:	95 95       	asr	r25
 2f8:	87 95       	ror	r24
 2fa:	6a 95       	dec	r22
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_u8_Get_pin_val+0x56>
 2fe:	81 70       	andi	r24, 0x01	; 1
 300:	08 95       	ret
		}
}

u8 DIO_u8_Get_pin_val(u8 copy_u8_port, u8 copy_u8_pin)
{
	u8 Loc_u8_val = 0;
 302:	80 e0       	ldi	r24, 0x00	; 0
		case PORTC : Loc_u8_val = GET_BIT(PINC_REG, copy_u8_pin); break;
		case PORTD : Loc_u8_val = GET_BIT(PIND_REG, copy_u8_pin); break;
	}
	
	return Loc_u8_val;
}
 304:	08 95       	ret

00000306 <DIO_void_Set_port_dir>:

void DIO_void_Set_port_dir(u8 copy_u8_port, u8 copy_u8_dir)
{
	switch (copy_u8_port)
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	49 f0       	breq	.+18     	; 0x31c <DIO_void_Set_port_dir+0x16>
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	28 f0       	brcs	.+10     	; 0x318 <DIO_void_Set_port_dir+0x12>
 30e:	82 30       	cpi	r24, 0x02	; 2
 310:	39 f0       	breq	.+14     	; 0x320 <DIO_void_Set_port_dir+0x1a>
 312:	83 30       	cpi	r24, 0x03	; 3
 314:	41 f4       	brne	.+16     	; 0x326 <DIO_void_Set_port_dir+0x20>
 316:	06 c0       	rjmp	.+12     	; 0x324 <DIO_void_Set_port_dir+0x1e>
	{
		case PORTA : DDRA_REG = copy_u8_dir; break;
 318:	6a bb       	out	0x1a, r22	; 26
 31a:	08 95       	ret
		case PORTB : DDRB_REG = copy_u8_dir; break;
 31c:	67 bb       	out	0x17, r22	; 23
 31e:	08 95       	ret
		case PORTC : DDRC_REG = copy_u8_dir; break;
 320:	64 bb       	out	0x14, r22	; 20
 322:	08 95       	ret
		case PORTD : DDRD_REG = copy_u8_dir; break;
 324:	61 bb       	out	0x11, r22	; 17
 326:	08 95       	ret

00000328 <DIO_void_Set_port_val>:
	
}

void DIO_void_Set_port_val(u8 copy_u8_port, u8 copy_u8_val)
{
	switch (copy_u8_port)
 328:	81 30       	cpi	r24, 0x01	; 1
 32a:	49 f0       	breq	.+18     	; 0x33e <DIO_void_Set_port_val+0x16>
 32c:	81 30       	cpi	r24, 0x01	; 1
 32e:	28 f0       	brcs	.+10     	; 0x33a <DIO_void_Set_port_val+0x12>
 330:	82 30       	cpi	r24, 0x02	; 2
 332:	39 f0       	breq	.+14     	; 0x342 <DIO_void_Set_port_val+0x1a>
 334:	83 30       	cpi	r24, 0x03	; 3
 336:	41 f4       	brne	.+16     	; 0x348 <DIO_void_Set_port_val+0x20>
 338:	06 c0       	rjmp	.+12     	; 0x346 <DIO_void_Set_port_val+0x1e>
	{
		case PORTA : PORTA_REG = copy_u8_val; break;
 33a:	6b bb       	out	0x1b, r22	; 27
 33c:	08 95       	ret
		case PORTB : PORTB_REG = copy_u8_val; break;
 33e:	68 bb       	out	0x18, r22	; 24
 340:	08 95       	ret
		case PORTC : PORTC_REG = copy_u8_val; break;
 342:	65 bb       	out	0x15, r22	; 21
 344:	08 95       	ret
		case PORTD : PORTD_REG = copy_u8_val; break;
 346:	62 bb       	out	0x12, r22	; 18
 348:	08 95       	ret

0000034a <main>:
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
	Timer1_FastPWM_init();
 34a:	0e 94 c0 01 	call	0x380	; 0x380 <Timer1_FastPWM_init>
	DIO_void_Set_pin_dir(PORTD, PIN5, OUTPUT);
 34e:	83 e0       	ldi	r24, 0x03	; 3
 350:	65 e0       	ldi	r22, 0x05	; 5
 352:	41 e0       	ldi	r20, 0x01	; 1
 354:	0e 94 49 00 	call	0x92	; 0x92 <DIO_void_Set_pin_dir>
	u32 i = 0;
    while(1)
    {
        for(i = 2000; i<=4000; i++)
 358:	c0 ed       	ldi	r28, 0xD0	; 208
 35a:	d7 e0       	ldi	r29, 0x07	; 7
 35c:	00 ed       	ldi	r16, 0xD0	; 208
 35e:	17 e0       	ldi	r17, 0x07	; 7
		{
			Timer1_FastPWM(i);
 360:	ce 01       	movw	r24, r28
 362:	0e 94 c9 01 	call	0x392	; 0x392 <Timer1_FastPWM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 366:	8f e9       	ldi	r24, 0x9F	; 159
 368:	9f e0       	ldi	r25, 0x0F	; 15
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x20>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x26>
 370:	00 00       	nop
	Timer1_FastPWM_init();
	DIO_void_Set_pin_dir(PORTD, PIN5, OUTPUT);
	u32 i = 0;
    while(1)
    {
        for(i = 2000; i<=4000; i++)
 372:	21 96       	adiw	r28, 0x01	; 1
 374:	9f e0       	ldi	r25, 0x0F	; 15
 376:	c1 3a       	cpi	r28, 0xA1	; 161
 378:	d9 07       	cpc	r29, r25
 37a:	90 f3       	brcs	.-28     	; 0x360 <main+0x16>
 37c:	e8 01       	movw	r28, r16
 37e:	f0 cf       	rjmp	.-32     	; 0x360 <main+0x16>

00000380 <Timer1_FastPWM_init>:
#include "DIO_Interface.h"

void Timer1_FastPWM_init()
{
	// Set Control Register:
	TCCR1A_REG = 0x82;
 380:	82 e8       	ldi	r24, 0x82	; 130
 382:	8f bd       	out	0x2f, r24	; 47
	ICR1_REG = 40000;
 384:	80 e4       	ldi	r24, 0x40	; 64
 386:	9c e9       	ldi	r25, 0x9C	; 156
 388:	97 bd       	out	0x27, r25	; 39
 38a:	86 bd       	out	0x26, r24	; 38
	//OCR1B_REG = 2000;
	TCCR1B_REG = 0x1A;
 38c:	8a e1       	ldi	r24, 0x1A	; 26
 38e:	8e bd       	out	0x2e, r24	; 46
}
 390:	08 95       	ret

00000392 <Timer1_FastPWM>:

// Range 2000 -> 4000 (0->180 degrees)
void Timer1_FastPWM(u32 tick)
{
	OCR1A_REG = tick;
 392:	9b bd       	out	0x2b, r25	; 43
 394:	8a bd       	out	0x2a, r24	; 42
 396:	08 95       	ret

00000398 <_exit>:
 398:	f8 94       	cli

0000039a <__stop_program>:
 39a:	ff cf       	rjmp	.-2      	; 0x39a <__stop_program>
