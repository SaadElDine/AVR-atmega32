
External_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000003b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009f5  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d7  00000000  00000000  00000ec1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a2  00000000  00000000  00001598  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00001a3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047b  00000000  00000000  00001b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003fc  00000000  00000000  0000200b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002407  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 45 01 	jmp	0x28a	; 0x28a <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 26 01 	call	0x24c	; 0x24c <main>
  74:	0c 94 9c 01 	jmp	0x338	; 0x338 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_void_Set_pin_dir>:
#include "DIO_Address.h"
#include "DIO_Interface.h"


void DIO_void_Set_pin_dir(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_dir) {
	if(copy_u8_pin <= 7 && copy_u8_pin >=0)
  7c:	68 30       	cpi	r22, 0x08	; 8
  7e:	08 f0       	brcs	.+2      	; 0x82 <DIO_void_Set_pin_dir+0x6>
  80:	6d c0       	rjmp	.+218    	; 0x15c <DIO_void_Set_pin_dir+0xe0>
	{
		if (copy_u8_dir == OUTPUT)
  82:	41 30       	cpi	r20, 0x01	; 1
  84:	a1 f5       	brne	.+104    	; 0xee <DIO_void_Set_pin_dir+0x72>
		{
			switch (copy_u8_port)
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	89 f0       	breq	.+34     	; 0xac <DIO_void_Set_pin_dir+0x30>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_void_Set_pin_dir+0x1a>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	c9 f0       	breq	.+50     	; 0xc2 <DIO_void_Set_pin_dir+0x46>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	11 f1       	breq	.+68     	; 0xd8 <DIO_void_Set_pin_dir+0x5c>
  94:	08 95       	ret
			{
				case PORTA: SET_BIT(DDRA_REG, copy_u8_pin); break;
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_void_Set_pin_dir+0x26>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_void_Set_pin_dir+0x22>
  a6:	82 2b       	or	r24, r18
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
				case PORTB: SET_BIT(DDRB_REG, copy_u8_pin); break;
  ac:	27 b3       	in	r18, 0x17	; 23
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_void_Set_pin_dir+0x3c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_void_Set_pin_dir+0x38>
  bc:	82 2b       	or	r24, r18
  be:	87 bb       	out	0x17, r24	; 23
  c0:	08 95       	ret
				case PORTC: SET_BIT(DDRC_REG, copy_u8_pin); break;
  c2:	24 b3       	in	r18, 0x14	; 20
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_void_Set_pin_dir+0x52>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_void_Set_pin_dir+0x4e>
  d2:	82 2b       	or	r24, r18
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	08 95       	ret
				case PORTD: SET_BIT(DDRD_REG, copy_u8_pin); break;
  d8:	21 b3       	in	r18, 0x11	; 17
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <DIO_void_Set_pin_dir+0x68>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <DIO_void_Set_pin_dir+0x64>
  e8:	82 2b       	or	r24, r18
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	08 95       	ret
			}
		}			
		else
		{
			switch (copy_u8_port)
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	91 f0       	breq	.+36     	; 0x116 <DIO_void_Set_pin_dir+0x9a>
  f2:	28 f0       	brcs	.+10     	; 0xfe <DIO_void_Set_pin_dir+0x82>
  f4:	82 30       	cpi	r24, 0x02	; 2
  f6:	d9 f0       	breq	.+54     	; 0x12e <DIO_void_Set_pin_dir+0xb2>
  f8:	83 30       	cpi	r24, 0x03	; 3
  fa:	29 f1       	breq	.+74     	; 0x146 <DIO_void_Set_pin_dir+0xca>
  fc:	08 95       	ret
			{
				case PORTA: CLR_BIT(DDRA_REG, copy_u8_pin); break;
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_void_Set_pin_dir+0x8e>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_void_Set_pin_dir+0x8a>
 10e:	80 95       	com	r24
 110:	82 23       	and	r24, r18
 112:	8a bb       	out	0x1a, r24	; 26
 114:	08 95       	ret
				case PORTB: CLR_BIT(DDRB_REG, copy_u8_pin); break;
 116:	27 b3       	in	r18, 0x17	; 23
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_void_Set_pin_dir+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	6a 95       	dec	r22
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_void_Set_pin_dir+0xa2>
 126:	80 95       	com	r24
 128:	82 23       	and	r24, r18
 12a:	87 bb       	out	0x17, r24	; 23
 12c:	08 95       	ret
				case PORTC: CLR_BIT(DDRC_REG, copy_u8_pin); break;
 12e:	24 b3       	in	r18, 0x14	; 20
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_void_Set_pin_dir+0xbe>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_void_Set_pin_dir+0xba>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
				case PORTD: CLR_BIT(DDRD_REG, copy_u8_pin); break;
 146:	21 b3       	in	r18, 0x11	; 17
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_void_Set_pin_dir+0xd6>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_void_Set_pin_dir+0xd2>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	81 bb       	out	0x11, r24	; 17
 15c:	08 95       	ret

0000015e <DIO_void_Set_pin_val>:
	}
}

void DIO_void_Set_pin_val(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_val)
{
	if(copy_u8_pin <= 7 && copy_u8_pin >=0)
 15e:	68 30       	cpi	r22, 0x08	; 8
 160:	08 f0       	brcs	.+2      	; 0x164 <DIO_void_Set_pin_val+0x6>
 162:	6d c0       	rjmp	.+218    	; 0x23e <DIO_void_Set_pin_val+0xe0>
	{
		if (copy_u8_val == OUTPUT)
 164:	41 30       	cpi	r20, 0x01	; 1
 166:	a1 f5       	brne	.+104    	; 0x1d0 <DIO_void_Set_pin_val+0x72>
		{
			switch (copy_u8_port)
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	89 f0       	breq	.+34     	; 0x18e <DIO_void_Set_pin_val+0x30>
 16c:	28 f0       	brcs	.+10     	; 0x178 <DIO_void_Set_pin_val+0x1a>
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	c9 f0       	breq	.+50     	; 0x1a4 <DIO_void_Set_pin_val+0x46>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	11 f1       	breq	.+68     	; 0x1ba <DIO_void_Set_pin_val+0x5c>
 176:	08 95       	ret
			{
				case PORTA: SET_BIT(PORTA_REG, copy_u8_pin); break;
 178:	2b b3       	in	r18, 0x1b	; 27
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_void_Set_pin_val+0x26>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_void_Set_pin_val+0x22>
 188:	82 2b       	or	r24, r18
 18a:	8b bb       	out	0x1b, r24	; 27
 18c:	08 95       	ret
				case PORTB: SET_BIT(PORTB_REG, copy_u8_pin); break;
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_void_Set_pin_val+0x3c>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_void_Set_pin_val+0x38>
 19e:	82 2b       	or	r24, r18
 1a0:	88 bb       	out	0x18, r24	; 24
 1a2:	08 95       	ret
				case PORTC: SET_BIT(PORTC_REG, copy_u8_pin); break;
 1a4:	25 b3       	in	r18, 0x15	; 21
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_void_Set_pin_val+0x52>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_void_Set_pin_val+0x4e>
 1b4:	82 2b       	or	r24, r18
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	08 95       	ret
				case PORTD: SET_BIT(PORTD_REG, copy_u8_pin); break;
 1ba:	22 b3       	in	r18, 0x12	; 18
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_void_Set_pin_val+0x68>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_void_Set_pin_val+0x64>
 1ca:	82 2b       	or	r24, r18
 1cc:	82 bb       	out	0x12, r24	; 18
 1ce:	08 95       	ret
			}
		}			
		else
		{
			switch (copy_u8_port)
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	91 f0       	breq	.+36     	; 0x1f8 <DIO_void_Set_pin_val+0x9a>
 1d4:	28 f0       	brcs	.+10     	; 0x1e0 <DIO_void_Set_pin_val+0x82>
 1d6:	82 30       	cpi	r24, 0x02	; 2
 1d8:	d9 f0       	breq	.+54     	; 0x210 <DIO_void_Set_pin_val+0xb2>
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	29 f1       	breq	.+74     	; 0x228 <DIO_void_Set_pin_val+0xca>
 1de:	08 95       	ret
			{
				case PORTA: CLR_BIT(PORTA_REG, copy_u8_pin); break;
 1e0:	2b b3       	in	r18, 0x1b	; 27
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_void_Set_pin_val+0x8e>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_void_Set_pin_val+0x8a>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	8b bb       	out	0x1b, r24	; 27
 1f6:	08 95       	ret
				case PORTB: CLR_BIT(PORTB_REG, copy_u8_pin); break;
 1f8:	28 b3       	in	r18, 0x18	; 24
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_void_Set_pin_val+0xa6>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_void_Set_pin_val+0xa2>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	88 bb       	out	0x18, r24	; 24
 20e:	08 95       	ret
				case PORTC: CLR_BIT(PORTC_REG, copy_u8_pin); break;
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_void_Set_pin_val+0xbe>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_void_Set_pin_val+0xba>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	85 bb       	out	0x15, r24	; 21
 226:	08 95       	ret
				case PORTD: CLR_BIT(PORTD_REG, copy_u8_pin); break;
 228:	22 b3       	in	r18, 0x12	; 18
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_void_Set_pin_val+0xd6>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_void_Set_pin_val+0xd2>
 238:	80 95       	com	r24
 23a:	82 23       	and	r24, r18
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	08 95       	ret

00000240 <LED>:
#define F_CPU 16000000UL
#include <util/delay.h>

void LED()
{
	DIO_void_Set_pin_val(PORTC,PIN2,HIGH);
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	62 e0       	ldi	r22, 0x02	; 2
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_void_Set_pin_val>
 24a:	08 95       	ret

0000024c <main>:
}

int main(void)
{
	DIO_void_Set_pin_dir(PORTC,PIN2,OUTPUT);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	62 e0       	ldi	r22, 0x02	; 2
 250:	82 e0       	ldi	r24, 0x02	; 2
 252:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTC,PIN7,OUTPUT);
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	67 e0       	ldi	r22, 0x07	; 7
 25a:	82 e0       	ldi	r24, 0x02	; 2
 25c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTC,PIN3,OUTPUT);
 260:	41 e0       	ldi	r20, 0x01	; 1
 262:	63 e0       	ldi	r22, 0x03	; 3
 264:	82 e0       	ldi	r24, 0x02	; 2
 266:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	Ext_Int0_init();
 26a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Ext_Int0_init>
	Ext_Int1_init();
 26e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <Ext_Int1_init>
	Ext_Int2_init();
 272:	0e 94 90 01 	call	0x320	; 0x320 <Ext_Int2_init>
	set_call_back(LED);	
 276:	80 e2       	ldi	r24, 0x20	; 32
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	0e 94 40 01 	call	0x280	; 0x280 <set_call_back>
 27e:	ff cf       	rjmp	.-2      	; 0x27e <main+0x32>

00000280 <set_call_back>:

void (*ptr_call_back)(void) = 0;

void set_call_back(void(*ptr)(void))
{
	ptr_call_back = ptr;
 280:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 284:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 288:	08 95       	ret

0000028a <__vector_1>:
}

ISR(INT_0)
{
 28a:	1f 92       	push	r1
 28c:	0f 92       	push	r0
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	2f 93       	push	r18
 296:	3f 93       	push	r19
 298:	4f 93       	push	r20
 29a:	5f 93       	push	r21
 29c:	6f 93       	push	r22
 29e:	7f 93       	push	r23
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
 2a4:	af 93       	push	r26
 2a6:	bf 93       	push	r27
 2a8:	ef 93       	push	r30
 2aa:	ff 93       	push	r31
	ptr_call_back();
 2ac:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b0:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2b4:	09 95       	icall
}
 2b6:	ff 91       	pop	r31
 2b8:	ef 91       	pop	r30
 2ba:	bf 91       	pop	r27
 2bc:	af 91       	pop	r26
 2be:	9f 91       	pop	r25
 2c0:	8f 91       	pop	r24
 2c2:	7f 91       	pop	r23
 2c4:	6f 91       	pop	r22
 2c6:	5f 91       	pop	r21
 2c8:	4f 91       	pop	r20
 2ca:	3f 91       	pop	r19
 2cc:	2f 91       	pop	r18
 2ce:	0f 90       	pop	r0
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	0f 90       	pop	r0
 2d4:	1f 90       	pop	r1
 2d6:	18 95       	reti

000002d8 <Ext_Int0_init>:

void Ext_Int0_init()
{
	DIO_void_Set_pin_dir(PORTD, PIN2, INTPUT);
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	62 e0       	ldi	r22, 0x02	; 2
 2dc:	83 e0       	ldi	r24, 0x03	; 3
 2de:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	// Rising edge
	SET_BIT(MCUCR_REG, 0);
 2e2:	85 b7       	in	r24, 0x35	; 53
 2e4:	81 60       	ori	r24, 0x01	; 1
 2e6:	85 bf       	out	0x35, r24	; 53
	SET_BIT(MCUCR_REG, 1);
 2e8:	85 b7       	in	r24, 0x35	; 53
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	85 bf       	out	0x35, r24	; 53
	// Set Global Interrupt 
	SET_BIT(SREG_REG, 7);
 2ee:	8f b7       	in	r24, 0x3f	; 63
 2f0:	80 68       	ori	r24, 0x80	; 128
 2f2:	8f bf       	out	0x3f, r24	; 63
	// Set INT0 Interrupt Enable
	SET_BIT(GICR_REG, 6);
 2f4:	8b b7       	in	r24, 0x3b	; 59
 2f6:	80 64       	ori	r24, 0x40	; 64
 2f8:	8b bf       	out	0x3b, r24	; 59
 2fa:	08 95       	ret

000002fc <Ext_Int1_init>:
}

void Ext_Int1_init()
{
	DIO_void_Set_pin_dir(PORTD, PIN3, INTPUT);
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	63 e0       	ldi	r22, 0x03	; 3
 300:	83 e0       	ldi	r24, 0x03	; 3
 302:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	// Rising edge
	SET_BIT(MCUCR_REG, 2);
 306:	85 b7       	in	r24, 0x35	; 53
 308:	84 60       	ori	r24, 0x04	; 4
 30a:	85 bf       	out	0x35, r24	; 53
	SET_BIT(MCUCR_REG, 3);
 30c:	85 b7       	in	r24, 0x35	; 53
 30e:	88 60       	ori	r24, 0x08	; 8
 310:	85 bf       	out	0x35, r24	; 53
	// Set Global Interrupt
	SET_BIT(SREG_REG, 7);
 312:	8f b7       	in	r24, 0x3f	; 63
 314:	80 68       	ori	r24, 0x80	; 128
 316:	8f bf       	out	0x3f, r24	; 63
	// Set INT1 Interrupt Enable
	SET_BIT(GICR_REG, 7);
 318:	8b b7       	in	r24, 0x3b	; 59
 31a:	80 68       	ori	r24, 0x80	; 128
 31c:	8b bf       	out	0x3b, r24	; 59
 31e:	08 95       	ret

00000320 <Ext_Int2_init>:
}

void Ext_Int2_init()
{
	DIO_void_Set_pin_dir(PORTB, PIN2, INTPUT);
 320:	40 e0       	ldi	r20, 0x00	; 0
 322:	62 e0       	ldi	r22, 0x02	; 2
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_void_Set_pin_dir>
	// Set Global Interrupt
	SET_BIT(SREG_REG, 7);
 32a:	8f b7       	in	r24, 0x3f	; 63
 32c:	80 68       	ori	r24, 0x80	; 128
 32e:	8f bf       	out	0x3f, r24	; 63
	// Set INT1 Interrupt Enable
	SET_BIT(GICR_REG, 5);
 330:	8b b7       	in	r24, 0x3b	; 59
 332:	80 62       	ori	r24, 0x20	; 32
 334:	8b bf       	out	0x3b, r24	; 59
 336:	08 95       	ret

00000338 <_exit>:
 338:	f8 94       	cli

0000033a <__stop_program>:
 33a:	ff cf       	rjmp	.-2      	; 0x33a <__stop_program>
