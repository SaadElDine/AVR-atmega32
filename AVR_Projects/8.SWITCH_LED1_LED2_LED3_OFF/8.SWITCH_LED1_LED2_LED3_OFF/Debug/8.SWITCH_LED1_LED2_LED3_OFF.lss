
8.SWITCH_LED1_LED2_LED3_OFF.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000003d0  00000444  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000444  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00000b98  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000569  00000000  00000000  00000c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001c6  00000000  00000000  000011a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ca  00000000  00000000  00001367  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00001734  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001fe  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000330  00000000  00000000  0000199a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "DIO_Interface.h"
#include <util/delay.h>

int main(void)
{
	DIO_void_Set_pin_dir(PORTB, PIN0, INPUT);
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTC, PIN2, OUTPUT);
  9c:	82 e0       	ldi	r24, 0x02	; 2
  9e:	62 e0       	ldi	r22, 0x02	; 2
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTC, PIN7, OUTPUT);
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	67 e0       	ldi	r22, 0x07	; 7
  aa:	41 e0       	ldi	r20, 0x01	; 1
  ac:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_Set_pin_dir>
	DIO_void_Set_pin_dir(PORTD, PIN3, OUTPUT);
  b0:	83 e0       	ldi	r24, 0x03	; 3
  b2:	63 e0       	ldi	r22, 0x03	; 3
  b4:	41 e0       	ldi	r20, 0x01	; 1
  b6:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_Set_pin_dir>
	u8 counter = 0;
  ba:	c0 e0       	ldi	r28, 0x00	; 0
    while(1)
    {
		if(counter > 3)
		{
			counter = 0;
  bc:	d0 e0       	ldi	r29, 0x00	; 0
	DIO_void_Set_pin_dir(PORTC, PIN7, OUTPUT);
	DIO_void_Set_pin_dir(PORTD, PIN3, OUTPUT);
	u8 counter = 0;
    while(1)
    {
		if(counter > 3)
  be:	c4 30       	cpi	r28, 0x04	; 4
  c0:	08 f0       	brcs	.+2      	; 0xc4 <main+0x32>
		{
			counter = 0;
  c2:	cd 2f       	mov	r28, r29
		}
		
		if(DIO_void_Get_pin_val(PORTB, PIN0) == 1)
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	6d 2f       	mov	r22, r29
  c8:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_void_Get_pin_val>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	b9 f7       	brne	.-18     	; 0xbe <main+0x2c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	91 ee       	ldi	r25, 0xE1	; 225
  d4:	a4 e0       	ldi	r26, 0x04	; 4
  d6:	81 50       	subi	r24, 0x01	; 1
  d8:	90 40       	sbci	r25, 0x00	; 0
  da:	a0 40       	sbci	r26, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x44>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x4e>
  e0:	00 00       	nop
		{
			_delay_ms(100);
			switch(counter)
  e2:	c1 30       	cpi	r28, 0x01	; 1
  e4:	69 f0       	breq	.+26     	; 0x100 <main+0x6e>
  e6:	c1 30       	cpi	r28, 0x01	; 1
  e8:	28 f0       	brcs	.+10     	; 0xf4 <main+0x62>
  ea:	c2 30       	cpi	r28, 0x02	; 2
  ec:	79 f0       	breq	.+30     	; 0x10c <main+0x7a>
  ee:	c3 30       	cpi	r28, 0x03	; 3
  f0:	11 f5       	brne	.+68     	; 0x136 <main+0xa4>
  f2:	12 c0       	rjmp	.+36     	; 0x118 <main+0x86>
			{
				case 0: DIO_void_Set_pin_val(PORTC, PIN2, HIGH); break;
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	62 e0       	ldi	r22, 0x02	; 2
  f8:	41 e0       	ldi	r20, 0x01	; 1
  fa:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
  fe:	1b c0       	rjmp	.+54     	; 0x136 <main+0xa4>
				case 1: DIO_void_Set_pin_val(PORTC, PIN7, HIGH); break;
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	67 e0       	ldi	r22, 0x07	; 7
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
 10a:	15 c0       	rjmp	.+42     	; 0x136 <main+0xa4>
				case 2: DIO_void_Set_pin_val(PORTD, PIN3, HIGH); break;
 10c:	83 e0       	ldi	r24, 0x03	; 3
 10e:	63 e0       	ldi	r22, 0x03	; 3
 110:	41 e0       	ldi	r20, 0x01	; 1
 112:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
 116:	0f c0       	rjmp	.+30     	; 0x136 <main+0xa4>
				case 3: DIO_void_Set_pin_val(PORTC, PIN2, LOW); DIO_void_Set_pin_val(PORTD, PIN3, LOW); DIO_void_Set_pin_val(PORTC, PIN7, LOW); break;
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	62 e0       	ldi	r22, 0x02	; 2
 11c:	4d 2f       	mov	r20, r29
 11e:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
 122:	83 e0       	ldi	r24, 0x03	; 3
 124:	63 e0       	ldi	r22, 0x03	; 3
 126:	4d 2f       	mov	r20, r29
 128:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	67 e0       	ldi	r22, 0x07	; 7
 130:	4d 2f       	mov	r20, r29
 132:	0e 94 2b 01 	call	0x256	; 0x256 <DIO_void_Set_pin_val>
			}
			counter++;
 136:	cf 5f       	subi	r28, 0xFF	; 255
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	91 ee       	ldi	r25, 0xE1	; 225
 13c:	a4 e0       	ldi	r26, 0x04	; 4
 13e:	81 50       	subi	r24, 0x01	; 1
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	a0 40       	sbci	r26, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <main+0xac>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0xb6>
 148:	00 00       	nop
 14a:	b9 cf       	rjmp	.-142    	; 0xbe <main+0x2c>

0000014c <DIO_void_Set_pin_dir>:
#include "MATH.h"
#include "DIO_Address.h"
#include "DIO_Interface.h"

void DIO_void_Set_pin_dir(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_dir) {
	if(copy_u8_pin <= 7 && copy_u8_pin >=0)
 14c:	68 30       	cpi	r22, 0x08	; 8
 14e:	08 f0       	brcs	.+2      	; 0x152 <DIO_void_Set_pin_dir+0x6>
 150:	81 c0       	rjmp	.+258    	; 0x254 <DIO_void_Set_pin_dir+0x108>
	{
		if (copy_u8_dir == OUTPUT)
 152:	41 30       	cpi	r20, 0x01	; 1
 154:	09 f0       	breq	.+2      	; 0x158 <DIO_void_Set_pin_dir+0xc>
 156:	3e c0       	rjmp	.+124    	; 0x1d4 <DIO_void_Set_pin_dir+0x88>
		{
			switch (copy_u8_port)
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	a9 f0       	breq	.+42     	; 0x186 <DIO_void_Set_pin_dir+0x3a>
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	30 f0       	brcs	.+12     	; 0x16c <DIO_void_Set_pin_dir+0x20>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	f1 f0       	breq	.+60     	; 0x1a0 <DIO_void_Set_pin_dir+0x54>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	09 f0       	breq	.+2      	; 0x16a <DIO_void_Set_pin_dir+0x1e>
 168:	75 c0       	rjmp	.+234    	; 0x254 <DIO_void_Set_pin_dir+0x108>
 16a:	27 c0       	rjmp	.+78     	; 0x1ba <DIO_void_Set_pin_dir+0x6e>
			{
				case PORTA: SET_BIT(DDRA_REG, copy_u8_pin); break;
 16c:	2a b3       	in	r18, 0x1a	; 26
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	ac 01       	movw	r20, r24
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_void_Set_pin_dir+0x2e>
 176:	44 0f       	add	r20, r20
 178:	55 1f       	adc	r21, r21
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_void_Set_pin_dir+0x2a>
 17e:	ba 01       	movw	r22, r20
 180:	62 2b       	or	r22, r18
 182:	6a bb       	out	0x1a, r22	; 26
 184:	08 95       	ret
				case PORTB: SET_BIT(DDRB_REG, copy_u8_pin); break;
 186:	27 b3       	in	r18, 0x17	; 23
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	ac 01       	movw	r20, r24
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_void_Set_pin_dir+0x48>
 190:	44 0f       	add	r20, r20
 192:	55 1f       	adc	r21, r21
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_void_Set_pin_dir+0x44>
 198:	ba 01       	movw	r22, r20
 19a:	62 2b       	or	r22, r18
 19c:	67 bb       	out	0x17, r22	; 23
 19e:	08 95       	ret
				case PORTC: SET_BIT(DDRC_REG, copy_u8_pin); break;
 1a0:	24 b3       	in	r18, 0x14	; 20
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	ac 01       	movw	r20, r24
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_void_Set_pin_dir+0x62>
 1aa:	44 0f       	add	r20, r20
 1ac:	55 1f       	adc	r21, r21
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_void_Set_pin_dir+0x5e>
 1b2:	ba 01       	movw	r22, r20
 1b4:	62 2b       	or	r22, r18
 1b6:	64 bb       	out	0x14, r22	; 20
 1b8:	08 95       	ret
				case PORTD: SET_BIT(DDRD_REG, copy_u8_pin); break;
 1ba:	21 b3       	in	r18, 0x11	; 17
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	ac 01       	movw	r20, r24
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_void_Set_pin_dir+0x7c>
 1c4:	44 0f       	add	r20, r20
 1c6:	55 1f       	adc	r21, r21
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_void_Set_pin_dir+0x78>
 1cc:	ba 01       	movw	r22, r20
 1ce:	62 2b       	or	r22, r18
 1d0:	61 bb       	out	0x11, r22	; 17
 1d2:	08 95       	ret
			}
		}			
		else
		{
			switch (copy_u8_port)
 1d4:	81 30       	cpi	r24, 0x01	; 1
 1d6:	a9 f0       	breq	.+42     	; 0x202 <DIO_void_Set_pin_dir+0xb6>
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_void_Set_pin_dir+0x9a>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	f9 f0       	breq	.+62     	; 0x21e <DIO_void_Set_pin_dir+0xd2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	c1 f5       	brne	.+112    	; 0x254 <DIO_void_Set_pin_dir+0x108>
 1e4:	2a c0       	rjmp	.+84     	; 0x23a <DIO_void_Set_pin_dir+0xee>
			{
				case PORTA: CLR_BIT(DDRA_REG, copy_u8_pin); break;
 1e6:	2a b3       	in	r18, 0x1a	; 26
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	ac 01       	movw	r20, r24
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_void_Set_pin_dir+0xa8>
 1f0:	44 0f       	add	r20, r20
 1f2:	55 1f       	adc	r21, r21
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_void_Set_pin_dir+0xa4>
 1f8:	ba 01       	movw	r22, r20
 1fa:	60 95       	com	r22
 1fc:	62 23       	and	r22, r18
 1fe:	6a bb       	out	0x1a, r22	; 26
 200:	08 95       	ret
				case PORTB: CLR_BIT(DDRB_REG, copy_u8_pin); break;
 202:	27 b3       	in	r18, 0x17	; 23
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	ac 01       	movw	r20, r24
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_void_Set_pin_dir+0xc4>
 20c:	44 0f       	add	r20, r20
 20e:	55 1f       	adc	r21, r21
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_void_Set_pin_dir+0xc0>
 214:	ba 01       	movw	r22, r20
 216:	60 95       	com	r22
 218:	62 23       	and	r22, r18
 21a:	67 bb       	out	0x17, r22	; 23
 21c:	08 95       	ret
				case PORTC: CLR_BIT(DDRC_REG, copy_u8_pin); break;
 21e:	24 b3       	in	r18, 0x14	; 20
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	ac 01       	movw	r20, r24
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_void_Set_pin_dir+0xe0>
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_void_Set_pin_dir+0xdc>
 230:	ba 01       	movw	r22, r20
 232:	60 95       	com	r22
 234:	62 23       	and	r22, r18
 236:	64 bb       	out	0x14, r22	; 20
 238:	08 95       	ret
				case PORTD: CLR_BIT(DDRD_REG, copy_u8_pin); break;
 23a:	21 b3       	in	r18, 0x11	; 17
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	ac 01       	movw	r20, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_void_Set_pin_dir+0xfc>
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_void_Set_pin_dir+0xf8>
 24c:	ba 01       	movw	r22, r20
 24e:	60 95       	com	r22
 250:	62 23       	and	r22, r18
 252:	61 bb       	out	0x11, r22	; 17
 254:	08 95       	ret

00000256 <DIO_void_Set_pin_val>:
	}
}

void DIO_void_Set_pin_val(u8 copy_u8_port, u8 copy_u8_pin, u8 copy_u8_val)
{
	if(copy_u8_pin <= 7 && copy_u8_pin >=0)
 256:	68 30       	cpi	r22, 0x08	; 8
 258:	08 f0       	brcs	.+2      	; 0x25c <DIO_void_Set_pin_val+0x6>
 25a:	81 c0       	rjmp	.+258    	; 0x35e <DIO_void_Set_pin_val+0x108>
	{
		if (copy_u8_val == OUTPUT)
 25c:	41 30       	cpi	r20, 0x01	; 1
 25e:	09 f0       	breq	.+2      	; 0x262 <DIO_void_Set_pin_val+0xc>
 260:	3e c0       	rjmp	.+124    	; 0x2de <DIO_void_Set_pin_val+0x88>
		{
			switch (copy_u8_port)
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	a9 f0       	breq	.+42     	; 0x290 <DIO_void_Set_pin_val+0x3a>
 266:	81 30       	cpi	r24, 0x01	; 1
 268:	30 f0       	brcs	.+12     	; 0x276 <DIO_void_Set_pin_val+0x20>
 26a:	82 30       	cpi	r24, 0x02	; 2
 26c:	f1 f0       	breq	.+60     	; 0x2aa <DIO_void_Set_pin_val+0x54>
 26e:	83 30       	cpi	r24, 0x03	; 3
 270:	09 f0       	breq	.+2      	; 0x274 <DIO_void_Set_pin_val+0x1e>
 272:	75 c0       	rjmp	.+234    	; 0x35e <DIO_void_Set_pin_val+0x108>
 274:	27 c0       	rjmp	.+78     	; 0x2c4 <DIO_void_Set_pin_val+0x6e>
			{
				case PORTA: SET_BIT(PORTA_REG, copy_u8_pin); break;
 276:	2b b3       	in	r18, 0x1b	; 27
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	ac 01       	movw	r20, r24
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_void_Set_pin_val+0x2e>
 280:	44 0f       	add	r20, r20
 282:	55 1f       	adc	r21, r21
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_void_Set_pin_val+0x2a>
 288:	ba 01       	movw	r22, r20
 28a:	62 2b       	or	r22, r18
 28c:	6b bb       	out	0x1b, r22	; 27
 28e:	08 95       	ret
				case PORTB: SET_BIT(PORTB_REG, copy_u8_pin); break;
 290:	28 b3       	in	r18, 0x18	; 24
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	ac 01       	movw	r20, r24
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_void_Set_pin_val+0x48>
 29a:	44 0f       	add	r20, r20
 29c:	55 1f       	adc	r21, r21
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_void_Set_pin_val+0x44>
 2a2:	ba 01       	movw	r22, r20
 2a4:	62 2b       	or	r22, r18
 2a6:	68 bb       	out	0x18, r22	; 24
 2a8:	08 95       	ret
				case PORTC: SET_BIT(PORTC_REG, copy_u8_pin); break;
 2aa:	25 b3       	in	r18, 0x15	; 21
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	ac 01       	movw	r20, r24
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_void_Set_pin_val+0x62>
 2b4:	44 0f       	add	r20, r20
 2b6:	55 1f       	adc	r21, r21
 2b8:	6a 95       	dec	r22
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_void_Set_pin_val+0x5e>
 2bc:	ba 01       	movw	r22, r20
 2be:	62 2b       	or	r22, r18
 2c0:	65 bb       	out	0x15, r22	; 21
 2c2:	08 95       	ret
				case PORTD: SET_BIT(PORTD_REG, copy_u8_pin); break;
 2c4:	22 b3       	in	r18, 0x12	; 18
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	ac 01       	movw	r20, r24
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_void_Set_pin_val+0x7c>
 2ce:	44 0f       	add	r20, r20
 2d0:	55 1f       	adc	r21, r21
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_void_Set_pin_val+0x78>
 2d6:	ba 01       	movw	r22, r20
 2d8:	62 2b       	or	r22, r18
 2da:	62 bb       	out	0x12, r22	; 18
 2dc:	08 95       	ret
			}
		}			
		else
		{
			switch (copy_u8_port)
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	a9 f0       	breq	.+42     	; 0x30c <DIO_void_Set_pin_val+0xb6>
 2e2:	81 30       	cpi	r24, 0x01	; 1
 2e4:	28 f0       	brcs	.+10     	; 0x2f0 <DIO_void_Set_pin_val+0x9a>
 2e6:	82 30       	cpi	r24, 0x02	; 2
 2e8:	f9 f0       	breq	.+62     	; 0x328 <DIO_void_Set_pin_val+0xd2>
 2ea:	83 30       	cpi	r24, 0x03	; 3
 2ec:	c1 f5       	brne	.+112    	; 0x35e <DIO_void_Set_pin_val+0x108>
 2ee:	2a c0       	rjmp	.+84     	; 0x344 <DIO_void_Set_pin_val+0xee>
			{
				case PORTA: CLR_BIT(PORTA_REG, copy_u8_pin); break;
 2f0:	2b b3       	in	r18, 0x1b	; 27
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	ac 01       	movw	r20, r24
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_void_Set_pin_val+0xa8>
 2fa:	44 0f       	add	r20, r20
 2fc:	55 1f       	adc	r21, r21
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_void_Set_pin_val+0xa4>
 302:	ba 01       	movw	r22, r20
 304:	60 95       	com	r22
 306:	62 23       	and	r22, r18
 308:	6b bb       	out	0x1b, r22	; 27
 30a:	08 95       	ret
				case PORTB: CLR_BIT(PORTB_REG, copy_u8_pin); break;
 30c:	28 b3       	in	r18, 0x18	; 24
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	ac 01       	movw	r20, r24
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_void_Set_pin_val+0xc4>
 316:	44 0f       	add	r20, r20
 318:	55 1f       	adc	r21, r21
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_void_Set_pin_val+0xc0>
 31e:	ba 01       	movw	r22, r20
 320:	60 95       	com	r22
 322:	62 23       	and	r22, r18
 324:	68 bb       	out	0x18, r22	; 24
 326:	08 95       	ret
				case PORTC: CLR_BIT(PORTC_REG, copy_u8_pin); break;
 328:	25 b3       	in	r18, 0x15	; 21
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	ac 01       	movw	r20, r24
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_void_Set_pin_val+0xe0>
 332:	44 0f       	add	r20, r20
 334:	55 1f       	adc	r21, r21
 336:	6a 95       	dec	r22
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_void_Set_pin_val+0xdc>
 33a:	ba 01       	movw	r22, r20
 33c:	60 95       	com	r22
 33e:	62 23       	and	r22, r18
 340:	65 bb       	out	0x15, r22	; 21
 342:	08 95       	ret
				case PORTD: CLR_BIT(PORTD_REG, copy_u8_pin); break;
 344:	22 b3       	in	r18, 0x12	; 18
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	ac 01       	movw	r20, r24
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_void_Set_pin_val+0xfc>
 34e:	44 0f       	add	r20, r20
 350:	55 1f       	adc	r21, r21
 352:	6a 95       	dec	r22
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_void_Set_pin_val+0xf8>
 356:	ba 01       	movw	r22, r20
 358:	60 95       	com	r22
 35a:	62 23       	and	r22, r18
 35c:	62 bb       	out	0x12, r22	; 18
 35e:	08 95       	ret

00000360 <DIO_void_Get_pin_val>:
}

u8	 DIO_void_Get_pin_val(u8 copy_u8_port, u8 copy_u8_pin) 
{
	u8 LOC_u8_val = 0;
	if(copy_u8_pin <= 7 && copy_u8_pin >=0)
 360:	68 30       	cpi	r22, 0x08	; 8
 362:	98 f5       	brcc	.+102    	; 0x3ca <DIO_void_Get_pin_val+0x6a>
	{
		switch(copy_u8_port)
 364:	81 30       	cpi	r24, 0x01	; 1
 366:	89 f0       	breq	.+34     	; 0x38a <DIO_void_Get_pin_val+0x2a>
 368:	81 30       	cpi	r24, 0x01	; 1
 36a:	28 f0       	brcs	.+10     	; 0x376 <DIO_void_Get_pin_val+0x16>
 36c:	82 30       	cpi	r24, 0x02	; 2
 36e:	b9 f0       	breq	.+46     	; 0x39e <DIO_void_Get_pin_val+0x3e>
 370:	83 30       	cpi	r24, 0x03	; 3
 372:	49 f5       	brne	.+82     	; 0x3c6 <DIO_void_Get_pin_val+0x66>
 374:	1e c0       	rjmp	.+60     	; 0x3b2 <DIO_void_Get_pin_val+0x52>
		{
			case PORTA: LOC_u8_val = GET_BIT(PINA_REG, copy_u8_pin); break;
 376:	29 b3       	in	r18, 0x19	; 25
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	c9 01       	movw	r24, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_void_Get_pin_val+0x22>
 37e:	95 95       	asr	r25
 380:	87 95       	ror	r24
 382:	6a 95       	dec	r22
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_void_Get_pin_val+0x1e>
 386:	81 70       	andi	r24, 0x01	; 1
 388:	08 95       	ret
			case PORTB: LOC_u8_val = GET_BIT(PINB_REG, copy_u8_pin); break;
 38a:	26 b3       	in	r18, 0x16	; 22
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	c9 01       	movw	r24, r18
 390:	02 c0       	rjmp	.+4      	; 0x396 <DIO_void_Get_pin_val+0x36>
 392:	95 95       	asr	r25
 394:	87 95       	ror	r24
 396:	6a 95       	dec	r22
 398:	e2 f7       	brpl	.-8      	; 0x392 <DIO_void_Get_pin_val+0x32>
 39a:	81 70       	andi	r24, 0x01	; 1
 39c:	08 95       	ret
			case PORTC: LOC_u8_val = GET_BIT(PINC_REG, copy_u8_pin); break;
 39e:	23 b3       	in	r18, 0x13	; 19
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	c9 01       	movw	r24, r18
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_void_Get_pin_val+0x4a>
 3a6:	95 95       	asr	r25
 3a8:	87 95       	ror	r24
 3aa:	6a 95       	dec	r22
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_void_Get_pin_val+0x46>
 3ae:	81 70       	andi	r24, 0x01	; 1
 3b0:	08 95       	ret
			case PORTD: LOC_u8_val = GET_BIT(PIND_REG, copy_u8_pin); break;
 3b2:	20 b3       	in	r18, 0x10	; 16
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	c9 01       	movw	r24, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <DIO_void_Get_pin_val+0x5e>
 3ba:	95 95       	asr	r25
 3bc:	87 95       	ror	r24
 3be:	6a 95       	dec	r22
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <DIO_void_Get_pin_val+0x5a>
 3c2:	81 70       	andi	r24, 0x01	; 1
 3c4:	08 95       	ret
	
}

u8	 DIO_void_Get_pin_val(u8 copy_u8_port, u8 copy_u8_pin) 
{
	u8 LOC_u8_val = 0;
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	08 95       	ret
			case PORTC: LOC_u8_val = GET_BIT(PINC_REG, copy_u8_pin); break;
			case PORTD: LOC_u8_val = GET_BIT(PIND_REG, copy_u8_pin); break;
		}
		return LOC_u8_val;
	}
 3ca:	08 95       	ret

000003cc <_exit>:
 3cc:	f8 94       	cli

000003ce <__stop_program>:
 3ce:	ff cf       	rjmp	.-2      	; 0x3ce <__stop_program>
